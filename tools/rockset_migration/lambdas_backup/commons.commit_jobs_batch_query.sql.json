{
  "query": "-- This query is used by pytorch .github/scripts/fetch_latest_green_commit.py script to upgrade\n-- viable/strict commit. The latest green commit is the latest commit without any failures that \n-- block viable/strict upgrade.  ATM, these failures are: lint, pull, and trunk\nWITH job AS (\n  SELECT\n    job._event_time AS time,\n    job.run_attempt,\n    workflow.head_commit.id AS sha,\n    job.name AS job_name,\n    workflow.name AS workflow_name,\n    job.id,\n    workflow.id AS workflow_id,\n    workflow.artifacts_url AS github_artifact_url,\n    job.conclusion,\n    job.html_url,\n    CONCAT(\n      'https://ossci-raw-job-status.s3.amazonaws.com/log/',\n      CAST(job.id AS string)\n    ) AS log_url,\n    DATE_DIFF(\n      'SECOND',\n      PARSE_TIMESTAMP_ISO8601(job.started_at),\n      PARSE_TIMESTAMP_ISO8601(job.completed_at)\n    ) AS duration_s,\n    classification.line AS failure_line,\n    classification.context AS failure_context,\n    classification.captures AS failure_captures,\n    classification.line_num AS failure_line_number,\n  FROM\n    workflow_job job\n    INNER JOIN workflow_run workflow ON workflow.id = job.run_id HINT(join_strategy = lookup)\n    LEFT JOIN \"GitHub-Actions\".classification ON classification.job_id = job.id HINT(join_strategy = lookup)\n  WHERE\n    job.name != 'ciflow_should_run'\n    AND job.name != 'generate-test-matrix'\n    AND workflow.event != 'workflow_run' -- Filter out workflow_run-triggered jobs, which have nothing to do with the SHA\n    AND workflow.event != 'repository_dispatch' -- Filter out repository_dispatch-triggered jobs, which have nothing to do with the SHA\n    AND ARRAY_CONTAINS(\n      SPLIT(: shas, ','),\n      workflow.head_commit.id\n    )\n  UNION\n    -- Handle CircleCI\n    -- IMPORTANT: this needs to have the same order as the query above\n  SELECT\n    job._event_time AS time,\n    job.run_attempt,\n    job.pipeline.vcs.revision AS sha,\n    -- Swap workflow and job name for consistency with GHA naming style.\n    job.workflow.name AS job_name,\n    job.job.name AS workflow_name,\n    job.job.number AS id,\n    null AS workflow_id,\n    null AS github_artifact_id,\n    CASE WHEN job.job.status = 'failed' THEN 'failure' WHEN job.job.status = 'canceled' THEN 'cancelled' ELSE job.job.status END AS conclusion,\n    -- cirleci doesn't provide a url, piece one together out of the info we have\n    CONCAT(\n      'https://app.circleci.com/pipelines/github/pytorch/pytorch/',\n      CAST(job.pipeline.number AS string),\n      '/workflows/',\n      job.workflow.id,\n      '/jobs/',\n      CAST(job.job.number AS string)\n    ) AS html_url,\n    -- logs aren't downloaded currently, just reuse html_url\n    html_url AS log_url,\n    DATE_DIFF(\n      'SECOND',\n      PARSE_TIMESTAMP_ISO8601(job.job.started_at),\n      PARSE_TIMESTAMP_ISO8601(job.job.stopped_at)\n    ) AS duration_s,\n    -- Classifications not yet supported\n    null,\n    null,\n    null,\n    null,\n  FROM\n    circleci.job job\n  WHERE\n    ARRAY_CONTAINS(\n      SPLIT(: shas, ','),\n      job.pipeline.vcs.revision\n    )\n),\nlatest_jobs AS (\n  SELECT\n    sha,\n    MAX(run_attempt) AS run_attempt,\n    workflow_name,\n    job_name,\n    MAX_BY(id, run_attempt) AS id,\n    workflow_id,\n    MAX_BY(\n      github_artifact_url, run_attempt\n    ) AS github_artifact_url,\n    MAX_BY(conclusion, run_attempt) AS conclusion,\n    MAX_BY(html_url, run_attempt) AS html_url,\n    MAX_BY(log_url, run_attempt) AS log_url,\n    MAX_BY(duration_s, run_attempt) AS duration_s,\n    MAX_BY(failure_line, run_attempt) AS failure_line,\n    MAX_BY(\n      failure_line_number, run_attempt\n    ) AS failure_line_number,\n    MAX_BY(failure_context, run_attempt) AS failure_context,\n    MAX_BY(failure_captures, run_attempt) AS failure_captures,\n  FROM\n    job\n  GROUP BY\n    sha,\n    workflow_id,\n    workflow_name,\n    job_name\n)\nSELECT\n  sha,\n  run_attempt,\n  workflow_name AS workflowName,\n  job_name AS jobName,\n  CONCAT(workflow_name, ' / ', job_name) AS name,\n  CAST(id AS string) AS id,\n  CAST(workflow_id AS string) AS workflowId,\n  github_artifact_url AS githubArtifactUrl,\n  CASE WHEN conclusion is NULL THEN 'pending' ELSE conclusion END AS conclusion,\n  html_url AS htmlUrl,\n  log_url AS logUrl,\n  duration_s AS durationS,\n  failure_line AS failureLine,\n  failure_line_number AS failureLineNumber,\n  failure_context AS failureContext,\n  failure_captures AS failureCaptures,\nFROM\n  latest_jobs\nORDER BY\n  name",
  "default_parameters": [
    {
      "name": "shas",
      "type": "string",
      "value": "d4b85f3031b81ea9f0e53502ad3b831fb91ec39b,1be1f5090eca226f8ffeab1c90bcbfdb2932cd4f"
    }
  ]
}