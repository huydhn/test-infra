{
  "workspace": "commons",
  "last_updated_by": "ivanzaitsev@meta.com",
  "last_updated": "2023-05-11T20:35:22Z",
  "name": "test_insights_bclint_failures",
  "version_count": 3,
  "collections": [
    "commons.workflow_run"
  ],
  "latest_version": {
    "workspace": "commons",
    "created_by": "ivanzaitsev@meta.com",
    "created_by_apikey_name": null,
    "created_at": "2023-05-11T20:35:22Z",
    "name": "test_insights_bclint_failures",
    "version": "a57990c6774fbb92",
    "description": "Exploring BCLinter failures",
    "sql": {
      "query": "WITH test_runs AS (\n  SELECT \n    *\n  FROM \n    commons.workflow_run \n  WHERE \n    workflow_run._event_time >= PARSE_DATETIME_ISO8601('2023-04-27T00:00:00.000Z') \n    --AND workflow_run._event_time < PARSE_DATETIME_ISO8601(: stopTime)\n    AND workflow_run.name = 'BC Lint'\n    --AND (workflow_run.actor.login = 'ezyang' OR workflow_run.actor.login = 'albanD')\n),\nmin_event_times AS (\n  SELECT \n    head_sha,\n    MIN(_event_time) AS min_event_time\n  FROM \n    test_runs \n  WHERE \n    conclusion = 'failure'\n  GROUP BY \n    head_sha\n),\nfailures AS (\n  SELECT \n    head_sha    \n  FROM \n    test_runs \n  WHERE \n    conclusion = 'failure'\n  GROUP BY \n    head_sha\n)\nSELECT \n  min_event_times.min_event_time AS min_event_time, \n  test_runs._event_time,\n  test_runs.head_sha,\n  test_runs.html_url, \n  test_runs.conclusion AS status\nFROM \n  test_runs \nJOIN \n  min_event_times ON test_runs.head_sha = min_event_times.head_sha\nWHERE \n  test_runs.head_sha in (select head_sha from failures)\nORDER BY \n  min_event_times.min_event_time DESC, _event_time DESC;\n",
      "default_parameters": []
    },
    "collections": [
      "commons.workflow_run"
    ],
    "state": "ACTIVE",
    "stats": {
      "last_executed": null,
      "last_executed_by": null,
      "last_execution_error": null,
      "last_execution_error_message": null
    },
    "public_access_id": null
  }
}