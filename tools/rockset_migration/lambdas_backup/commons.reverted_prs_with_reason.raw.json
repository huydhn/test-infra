{
  "workspace": "commons",
  "last_updated_by": "csl@fb.com",
  "last_updated": "2023-02-01T21:17:56Z",
  "name": "reverted_prs_with_reason",
  "version_count": 1,
  "collections": [
    "commons.issue_comment"
  ],
  "latest_version": {
    "workspace": "commons",
    "created_by": "csl@fb.com",
    "created_by_apikey_name": null,
    "created_at": "2023-02-01T21:17:56Z",
    "name": "reverted_prs_with_reason",
    "version": "751f01cba16364f0",
    "description": "Displays the PRs that were reverted and their classifications",
    "sql": {
      "query": "SELECT\n    ic._event_time revert_time,\n    ic.user.login as reverter,\n    REGEXP_EXTRACT(\n        ic.body,\n        '(-c|--classification)[\\s =]+[\"'']?(\\w+)[\"'']?',\n        2\n    ) as code,\n    REGEXP_EXTRACT(\n        ic.body,\n        '(-m|--message)[\\s =]+[\"'']?([^\"'']+)[\"'']?',\n        2\n    ) as message,\n    ic.html_url as comment_url\nFROM\n    commons.issue_comment AS ic\n    INNER JOIN (\n        SELECT\n            issue_comment.issue_url,\n            MAX(issue_comment._event_time) as event_time -- Use the max for when invalid revert commands are tried first\n        FROM\n            commons.issue_comment\n        WHERE\n            REGEXP_LIKE(\n                issue_comment.body,\n                ' *@pytorch(merge|)bot revert'\n            )\n        GROUP BY\n            issue_comment.issue_url\n    ) AS rc ON ic.issue_url = rc.issue_url\nWHERE\n    ic._event_time = rc.event_time\n    AND ic._event_time >= PARSE_TIMESTAMP_ISO8601(:startTime)\n    AND ic._event_time < PARSE_TIMESTAMP_ISO8601(:stopTime)\n    AND ic.user.login != 'pytorch-bot[bot]'\nORDER BY\n    code DESC\n",
      "default_parameters": [
        {
          "name": "startTime",
          "type": "string",
          "value": "2022-10-17T00:06:32.839Z"
        },
        {
          "name": "stopTime",
          "type": "string",
          "value": "2022-10-24T00:06:32.839Z"
        }
      ]
    },
    "collections": [
      "commons.issue_comment"
    ],
    "state": "ACTIVE",
    "stats": {
      "last_executed": "2023-05-29T15:18:20Z",
      "last_executed_by": "darthsuo@gmail.com",
      "last_execution_error": null,
      "last_execution_error_message": null
    },
    "public_access_id": null
  }
}