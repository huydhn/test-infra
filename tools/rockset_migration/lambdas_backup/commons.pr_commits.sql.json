{
  "query": "-- This query is used by the HUD's /pull page to populate the list of historical commits\n-- made against a given PR.\n-- This improves upon the default github commits view because it allows HUD to show jobs\n-- that ran on a PR before it was rebased\n\nWITH\n-- Get all PRs that were merged into master, and get all the SHAs for commits from that PR which CI jobs ran against\n-- We need the shas because some jobs (like trunk) don't have a PR they explicitly ran against, but they _were_ run against\n-- a commit from a PR\npr_shas AS (\n  SELECT DISTINCT\n    FORMAT_ISO8601(\n        PARSE_TIMESTAMP_ISO8601(p.head_commit.timestamp),\n        'America/Los_Angeles'\n    ) as timestamp,\n    r.pull_requests[1].number AS pr_number,\n    p.head_commit.id AS sha,\n    p.head_commit.message,\n    CONCAT(\n      'https://github.com/',\n      :owner,\n      '/',\n      :repo,\n      '/pull/',\n      r.pull_requests[1].number\n    ) AS pr_url,\n    p.head_commit.url AS commit_url,\n  FROM\n    commons.push p\n    JOIN commons.workflow_run r ON p.head_commit.id = r.head_sha HINT(join_strategy=lookup)\n  WHERE\n    1 = 1\n    AND LENGTH(r.pull_requests) = 1\n    AND r.repository.owner.login = :owner\n    AND r.pull_requests[1].head.repo.name = :repo\n    AND r.pull_requests[1].number = :pr_num\n\n)\nSELECT\n  *\nFROM\n  pr_shas\nORDER BY timestamp\n",
  "default_parameters": [
    {
      "name": "owner",
      "type": "string",
      "value": "pytorch"
    },
    {
      "name": "pr_num",
      "type": "int",
      "value": "110976"
    },
    {
      "name": "repo",
      "type": "string",
      "value": "pytorch"
    }
  ]
}