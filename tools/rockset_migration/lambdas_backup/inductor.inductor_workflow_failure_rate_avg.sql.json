{
  "query": "-- Report status of trunk, calling out for each sha:\n--   * If it had any failure _due to trunk_\n--   * If it the failure was due to a gpu issue\nwith failed_due_to_flaky_inductor as (\n    select\n        sha,\n        max(flaky) as flaky,\n        max(gpu_failure) as gpu_failure,\n        min(successful) as success,\n    from\n        inductor.inductor_jobs_with_annotations\n    group by\n        sha\n)\n\n-- Overall flakiness on trunk\nselect \n  (select count(*) from failed_due_to_flaky_inductor where flaky and not gpu_failure) * 100.0\n  /(select count(*) from failed_due_to_flaky_inductor) as non_gpu_flaky_rate,\n  (select count(*) from failed_due_to_flaky_inductor where not success and not gpu_failure) * 100.0\n  /(select count(*) from failed_due_to_flaky_inductor) as non_gpu_faliure_rate,\n  (select count(*) from failed_due_to_flaky_inductor where not success) * 100.0\n  /(select count(*) from failed_due_to_flaky_inductor) as total_failure_rate,\n  (select count(*) from failed_due_to_flaky_inductor where success) * 100.0\n  /(select count(*) from failed_due_to_flaky_inductor) as success_rate,\n\n-- The flakiest jobs\n-- select AVG(CAST(flaky as FLOAT)) * 100.0 as failure_rate, jobName from jobs_with_flaky_annotation group by jobName order by failure_rate desc\n\n-- The specific runs that flaked\n-- select * from jobs_with_flaky_annotation where flaky\n",
  "default_parameters": []
}