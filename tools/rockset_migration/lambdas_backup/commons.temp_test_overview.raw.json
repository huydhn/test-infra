{
  "workspace": "commons",
  "last_updated_by": "sahanp@meta.com",
  "last_updated": "2023-04-27T22:14:15Z",
  "name": "temp_test_overview",
  "version_count": 1,
  "collections": [
    "commons.workflow_job",
    "commons.workflow_run",
    "commons.test_run_summary"
  ],
  "latest_version": {
    "workspace": "commons",
    "created_by": "sahanp@meta.com",
    "created_by_apikey_name": null,
    "created_at": "2023-04-27T22:14:15Z",
    "name": "temp_test_overview",
    "version": "7990baace199d41a",
    "description": null,
    "sql": {
      "query": "WITH test_runs AS (\n  SELECT \n    workflow_run.name AS workflow_name, \n    workflow_job.name AS job_name, \n    test_run_summary.invoking_file AS test_file, \n    test_run_summary.classname AS test_class, \n    test_run_summary.tests AS tests, \n    test_run_summary.errors AS errors, \n    test_run_summary.failures AS failures, \n    test_run_summary.skipped AS skipped, \n    test_run_summary.time AS duration_in_second, \n  FROM \n    commons.test_run_summary \n    JOIN commons.workflow_run on test_run_summary.workflow_id = CAST(workflow_run.id as string) \n    JOIN commons.workflow_job on test_run_summary.job_id = workflow_job.id \n  WHERE \n    test_run_summary._event_time >= PARSE_DATETIME_ISO8601(: startTime) \n    AND test_run_summary._event_time < PARSE_DATETIME_ISO8601(: stopTime) \n    AND test_run_summary.workflow_run_attempt = 1 \n    AND workflow_run.name = : workflowName \n    AND workflow_run.head_branch = 'main'\n    AND test_run_summary.invoking_file LIKE : testFile \n    AND test_run_summary.classname LIKE : testClass\n), \naggregated_test_runs AS (\n  SELECT \n    workflow_name, \n    job_name, \n    test_file, \n    test_class, \n    CAST(\n      AVG(duration_in_second) AS int\n    ) avg_duration_in_second, \n    CAST(\n      AVG(tests) AS int\n    ) AS avg_tests, \n    MAX(failures) AS max_failures, \n    MAX(errors) AS max_errors, \n    CAST(\n      AVG(skipped) AS int\n    ) AS avg_skipped, \n  FROM \n    test_runs \n  GROUP BY \n    workflow_name, \n    job_name, \n    test_file, \n    test_class\n) \nSELECT \n  * \nFROM \n  aggregated_test_runs \nWHERE \n  avg_duration_in_second >= : thresholdInSecond \nORDER BY \n  avg_duration_in_second DESC\n",
      "default_parameters": [
        {
          "name": "startTime",
          "type": "string",
          "value": "2023-04-02T00:00:00.000Z"
        },
        {
          "name": "stopTime",
          "type": "string",
          "value": "2023-04-04T00:00:00.000Z"
        },
        {
          "name": "testClass",
          "type": "string",
          "value": "%"
        },
        {
          "name": "testFile",
          "type": "string",
          "value": "%"
        },
        {
          "name": "thresholdInSecond",
          "type": "int",
          "value": "1800"
        },
        {
          "name": "workflowName",
          "type": "string",
          "value": "pull"
        }
      ]
    },
    "collections": [
      "commons.workflow_job",
      "commons.workflow_run",
      "commons.test_run_summary"
    ],
    "state": "ACTIVE",
    "stats": {
      "last_executed": null,
      "last_executed_by": null,
      "last_execution_error": null,
      "last_execution_error_message": null
    },
    "public_access_id": null
  }
}