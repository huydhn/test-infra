{
  "workspace": "commons",
  "last_updated_by": "janeyx@fb.com",
  "last_updated": "2022-05-24T17:37:54Z",
  "name": "flaky_tests_per_job",
  "version_count": 2,
  "collections": [
    "commons.workflow_job",
    "commons.test_run",
    "commons.workflow_run"
  ],
  "latest_version": {
    "workspace": "commons",
    "created_by": "janeyx@fb.com",
    "created_by_apikey_name": null,
    "created_at": "2022-05-24T17:37:54Z",
    "name": "flaky_tests_per_job",
    "version": "940ea15849d37d3c",
    "description": "return flaky test data in the last 3 hours",
    "sql": {
      "query": "WITH recent_tests AS (\n\tSELECT \n  \t\ttest.name,\n      \ttest.classname as suite,\n      \ttest.file,\n      \ttest.time,\n      \tIF(NOT test.error IS NULL AND test.error.type = 'UnexpectedSuccess', 1, 0) as unexpected_success,\n      \tIF(NOT test.error IS NULL AND test.error.type <> 'UnexpectedSuccess', 1, 0) as errored,\n      \tIF(NOT test.skipped IS NULL AND test.skipped.type = 'XFAIL', 1, 0) as expected_failure,\n      \tIF(NOT test.skipped IS NULL AND test.skipped.type <> 'XFAIL', 1, 0) as was_skipped,\n      \tIF(NOT test.failure IS NULL, 1, 0) as failed,\n      \tIF(test.failure IS NULL AND test.error IS NULL and test.skipped IS NULL, 1, 0) as passed,\n  \t\tjob.id AS jobId,\n\t\tjob.name as jobName,\n  \t\tjob.run_id as workflowId,\n  \tFROM\n  \t\tcommons.test_run test INNER JOIN commons.workflow_job job ON test.job_id = job.id HINT(join_strategy=lookup, access_path=column_scan)\n\tWHERE\n  \t\tjob._event_time > (CURRENT_TIMESTAMP() - HOURs(:numHours))\n), processed_tests AS (\n  \tSELECT \n      \tname,\n      \tsuite,\n      \tfile,\n  \t\tjobId,\n\t\tARBITRARY(jobName) AS jobName,\n  \t\tARBITRARY(workflowId) AS workflowId,\n  \t\tSUM(time) as time,\n     \tIF(sum(unexpected_success) > SUM(passed), sum(unexpected_success), sum(passed)) as num_green,\n      \tSUM(failed + expected_failure + errored) as num_red,\n      \tSUM(was_skipped) as num_skipped,\n  \tFROM \n      \trecent_tests HINT(access_path=column_scan)\n  \tGROUP BY \n      \tname,\n      \tsuite,\n      \tfile,\n  \t\tjobId\n)\nSELECT \n\tt.name,\n    t.suite,\n    t.file,\n    t.num_green AS numGreen,\n    t.num_red AS numRed,\n    t.num_skipped AS numSkipped,\n    t.jobId,\n    t.jobName,\n    t.workflowId,\n    workflow.name AS workflowName,\n    workflow.head_branch as branch,\nFROM \n\tprocessed_tests t JOIN commons.workflow_run workflow on workflow.id = t.workflowId  HINT(access_path=column_scan)\nWHERE \n\tt.num_red > 0\n    AND t.num_green > 0\n    AND t.name LIKE :name\n    AND t.suite LIKE :suite\n    AND t.file LIKE :file",
      "default_parameters": [
        {
          "name": "file",
          "type": "string",
          "value": "%"
        },
        {
          "name": "jobId",
          "type": "int",
          "value": "6462710103"
        },
        {
          "name": "name",
          "type": "string",
          "value": "%"
        },
        {
          "name": "numHours",
          "type": "int",
          "value": "3"
        },
        {
          "name": "suite",
          "type": "string",
          "value": "%"
        }
      ]
    },
    "collections": [
      "commons.workflow_run",
      "commons.workflow_job",
      "commons.test_run"
    ],
    "state": "ACTIVE",
    "stats": {
      "last_executed": null,
      "last_executed_by": null,
      "last_execution_error": null,
      "last_execution_error_message": null
    },
    "public_access_id": null
  }
}