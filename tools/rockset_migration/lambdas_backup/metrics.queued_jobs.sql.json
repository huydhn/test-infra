{
  "query": "--- This query is used by HUD metrics page to get the list of queued jobs\nSELECT\n  DATE_DIFF(\n    'second',\n    job._event_time,\n    CURRENT_TIMESTAMP()\n  ) AS queue_s,\n  CONCAT(workflow.name, ' / ', job.name) AS name,\n  job.html_url,\n  IF(\n    LENGTH(job.labels) = 0,\n    'N/A',\n    IF(\n      LENGTH(job.labels) > 1,\n      ELEMENT_AT(job.labels, 2),\n      ELEMENT_AT(job.labels, 1)\n    )\n  ) AS machine_type,\nFROM\n  commons.workflow_job job\n  JOIN commons.workflow_run workflow ON workflow.id = job.run_id\nWHERE\n  workflow.repository.full_name = 'pytorch/pytorch'\n  AND job.status = 'queued'\n  AND job._event_time < (\n    CURRENT_TIMESTAMP() - INTERVAL 5 MINUTE\n  )\n  /* These two conditions are workarounds for GitHub's broken API. Sometimes */\n  /* jobs get stuck in a permanently \"queued\" state but definitely ran. We can */\n  /* detect this by looking at whether any steps executed (if there were, */\n  /* obviously the job started running), and whether the workflow was marked as */\n  /* complete (somehow more reliable than the job-level API) */\n  AND LENGTH(job.steps) = 0\n  AND workflow.status != 'completed'\nORDER BY\n  queue_s DESC",
  "default_parameters": []
}