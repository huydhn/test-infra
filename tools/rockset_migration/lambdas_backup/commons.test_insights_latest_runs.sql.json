{
  "query": "SELECT DISTINCT\n    test_run_summary.workflow_id,\n    test_run_summary.job_id,\n    test_run_summary._event_time,\n    test_run_summary.time,\n    test_run_summary.tests,\n    test_run_summary.skipped,\n    test_run_summary.failures,\n    test_run_summary.errors\nFROM\n    commons.test_run_summary\n    JOIN commons.workflow_run on test_run_summary.workflow_id = CAST(workflow_run.id as string)\n    JOIN commons.workflow_job on test_run_summary.job_id = workflow_job.id\nWHERE\n    test_run_summary._event_time >= PARSE_DATETIME_ISO8601(:startTime)\n    AND test_run_summary._event_time < PARSE_DATETIME_ISO8601(:stopTime)\n    AND test_run_summary.workflow_run_attempt = 1\n    AND workflow_run.name = :workflowName\n    AND workflow_job.name = :jobName\n    AND test_run_summary.invoking_file = :testFile\n    AND test_run_summary.classname = :testClass\n    AND workflow_run.head_branch = 'main'\nORDER BY\n    test_run_summary._event_time DESC\nLIMIT\n    :limit\n",
  "default_parameters": [
    {
      "name": "jobName",
      "type": "string",
      "value": "linux-bionic-cuda11.6-py3.10-gcc7 / test (default, 1, 4, linux.4xlarge.nvidia.gpu)"
    },
    {
      "name": "limit",
      "type": "int",
      "value": "10"
    },
    {
      "name": "startTime",
      "type": "string",
      "value": "2022-08-30T00:00:00.000Z"
    },
    {
      "name": "stopTime",
      "type": "string",
      "value": "2022-09-06T00:00:00.000Z"
    },
    {
      "name": "testClass",
      "type": "string",
      "value": "TestCommonCUDA"
    },
    {
      "name": "testFile",
      "type": "string",
      "value": "test_ops"
    },
    {
      "name": "workflowName",
      "type": "string",
      "value": "pull"
    }
  ]
}