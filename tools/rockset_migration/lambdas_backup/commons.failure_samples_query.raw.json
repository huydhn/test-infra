{
  "workspace": "commons",
  "last_updated_by": "sahanp@meta.com",
  "last_updated": "2023-10-13T20:55:59Z",
  "name": "failure_samples_query",
  "version_count": 1,
  "collections": [
    "commons.workflow_job",
    "commons.workflow_run"
  ],
  "latest_version": {
    "workspace": "commons",
    "created_by": "sahanp@meta.com",
    "created_by_apikey_name": null,
    "created_at": "2023-10-13T20:55:59Z",
    "name": "failure_samples_query",
    "version": "7940a636284d0752",
    "description": null,
    "sql": {
      "query": "SELECT\n    job._event_time AS time,\n    w.name AS workflowName,\n    job.name AS jobName,\n    CONCAT(w.name, ' / ', job.name) AS name,\n    w.head_sha AS sha,\n    job.id AS id,\n    w.head_branch as branch,\n    CASE\n        WHEN job.conclusion IS NULL THEN 'pending'\n        ELSE job.conclusion\n    END AS conclusion,\n    job.html_url AS htmlUrl,\n    CONCAT(\n        'https://ossci-raw-job-status.s3.amazonaws.com/log/',\n        CAST(job.id AS string)\n    ) AS logUrl,\n    DATE_DIFF(\n        'SECOND',\n        PARSE_TIMESTAMP_ISO8601(job.started_at),\n        PARSE_TIMESTAMP_ISO8601(job.completed_at)\n    ) AS durationS,\n    ARRAY_CREATE(job.torchci_classification.line) AS failureLines,\n    ARRAY_CREATE(job.torchci_classification.line_num) AS failureLineNumbers,\n    job.torchci_classification.context AS failureContext,\n    job.torchci_classification.captures AS failureCaptures,\nFROM\n    commons.workflow_job job\n    JOIN commons.workflow_run w HINT(access_path = column_scan) ON w.id = job.run_id\nWHERE\n    w.head_branch LIKE :branch\n    AND w.head_repository.full_name = :repo\n    AND job.torchci_classification.line LIKE FORMAT('%{}%', REGEXP_REPLACE(:captures, ',', '%'))\nORDER BY\n    job.torchci_classification._event_time DESC\n",
      "default_parameters": [
        {
          "name": "branch",
          "type": "string",
          "value": "%"
        },
        {
          "name": "captures",
          "type": "string",
          "value": "test_cublas_baddbmm_large_input_1_10000_10000_10000_cuda_float32,TestMatmulCudaCUDA"
        },
        {
          "name": "repo",
          "type": "string",
          "value": "pytorch/pytorch"
        }
      ]
    },
    "collections": [
      "commons.workflow_run",
      "commons.workflow_job"
    ],
    "state": "ACTIVE",
    "stats": {
      "last_executed": "2024-01-24T16:52:00Z",
      "last_executed_by": "darthsuo@gmail.com",
      "last_execution_error": null,
      "last_execution_error_message": null
    },
    "public_access_id": null
  }
}