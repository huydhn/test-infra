{
  "query": "SELECT\n    max(tts_sec) AS tts_sec,\n    COUNT(name) AS count,\n    name\nFROM\n    (\n        SELECT\n            tts_sec,\n            name,\n            PERCENT_RANK() OVER (\n                PARTITION BY name\n                ORDER BY\n                    tts_sec DESC\n            ) AS percentile\n        FROM\n            (\n                SELECT\n                    DATE_DIFF(\n                        'second',\n                        PARSE_TIMESTAMP_ISO8601(workflow.created_at),\n                        PARSE_TIMESTAMP_ISO8601(job.completed_at)\n                    ) AS tts_sec,\n                    CONCAT(workflow.name, ' / ', job.name) as name\n                FROM\n                    commons.workflow_job job\n                    JOIN commons.workflow_run workflow on workflow.id = job.run_id\n                WHERE\n                    job.name != 'ciflow_should_run'\n                    AND job.name != 'generate-test-matrix'\n                    AND job.name != 'get_workflow_conclusion'\n                    AND workflow.repository.full_name = 'pytorch/pytorch'\n                    AND job._event_time >= PARSE_DATETIME_ISO8601(:startTime)\n                    AND job._event_time < PARSE_DATETIME_ISO8601(:stopTime)\n                    AND job.conclusion = 'success'\n                    AND workflow.head_branch LIKE :branch\n                    AND workflow.run_attempt = 1\n            ) AS tts\n    ) AS p\nWHERE\n    (\n        NOT IS_NAN(p.percentile)\n        AND p.percentile >= (1.0 - :percentile)\n    )\nGROUP BY\n    name\nORDER BY\n    COUNT(name) * MAX(tts_sec) DESC\n\n",
  "default_parameters": [
    {
      "name": "branch",
      "type": "string",
      "value": "%"
    },
    {
      "name": "percentile",
      "type": "float",
      "value": "0.9"
    },
    {
      "name": "startTime",
      "type": "string",
      "value": "2022-07-01T00:00:00.000Z"
    },
    {
      "name": "stopTime",
      "type": "string",
      "value": "2022-08-01T00:00:00.000Z"
    }
  ]
}