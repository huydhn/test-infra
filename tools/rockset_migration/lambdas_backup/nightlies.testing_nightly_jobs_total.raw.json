{
  "workspace": "nightlies",
  "last_updated_by": "osalpekar@meta.com",
  "last_updated": "2023-10-05T21:11:12Z",
  "name": "testing_nightly_jobs_total",
  "version_count": 1,
  "collections": [
    "commons.workflow_job",
    "commons.workflow_run",
    "commons.push"
  ],
  "latest_version": {
    "workspace": "nightlies",
    "created_by": "osalpekar@meta.com",
    "created_by_apikey_name": null,
    "created_at": "2023-10-05T21:11:12Z",
    "name": "testing_nightly_jobs_total",
    "version": "7b3e98024e2de6a7",
    "description": null,
    "sql": {
      "query": "SELECT\n  COUNT(*) COUNT, workflow.name\nFROM\n  commons.workflow_job job\n  JOIN commons.workflow_run workflow on workflow.id = job.run_id\n  JOIN push on workflow.head_commit.id = push.head_commit.id\nWHERE\n  job.name NOT LIKE '%generate-matrix%'\n  AND job.name NOT LIKE '%unittests%'\n  AND workflow.name NOT IN ('cron', 'Bandit', 'tests', 'Lint')\n  AND push.ref = 'refs/heads/nightly'\n  AND push.repository.owner.name = 'pytorch'\n  AND push.repository.name in ('pytorch', 'vision', 'audio', 'text')\n  AND job._event_time >= PARSE_DATETIME_ISO8601(:startTime)\n  AND job._event_time < PARSE_DATETIME_ISO8601(:stopTime)\n  AND job.conclusion in ('failure', 'timed_out', 'cancelled')\n  GROUP BY\n  workflow.name\n  ORDER BY COUNT DESC\n\n",
      "default_parameters": [
        {
          "name": "startTime",
          "type": "string",
          "value": "2023-06-16T00:00:38.270Z"
        },
        {
          "name": "stopTime",
          "type": "string",
          "value": "2023-06-16T20:20:38.270Z"
        }
      ]
    },
    "collections": [
      "commons.push",
      "commons.workflow_run",
      "commons.workflow_job"
    ],
    "state": "ACTIVE",
    "stats": {
      "last_executed": null,
      "last_executed_by": null,
      "last_execution_error": null,
      "last_execution_error_message": null
    },
    "public_access_id": null
  }
}