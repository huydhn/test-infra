{
  "query": "--- This query is used to get the LLMs benchmark results from different experiments. It\n--- queries the TPS and memory bandwidth for each model / quantization combos. This powers\n--- the LLMs benchmark dashboard\nSELECT\n  DISTINCT o.workflow_id,\n  -- As the JSON response is pretty big, only return the field if it's needed\n  IF(:getJobId, o.job_id, NULL) AS job_id,\n  o.name,\n  o.metric,\n  IF(\n    o.actual IS NOT NULL,\n    CAST(o.actual AS FLOAT), 0.0\n  ) AS actual,\n  IF(\n    o.target IS NOT NULL,\n    CAST(o.target AS FLOAT), 0.0\n  ) AS target,\n  FORMAT_ISO8601(\n    DATE_TRUNC(: granularity, w._event_time)\n  ) AS granularity_bucket,\n  o.dtype,\n  o.device,\nFROM\n  benchmarks.oss_ci_benchmark o\n  LEFT JOIN commons.workflow_run w ON o.workflow_id = w.id\nWHERE\n  (\n    ARRAY_CONTAINS(\n      SPLIT(: branches, ','),\n      w.head_branch\n    )\n    OR : branches = ''\n  )\n  AND (\n    ARRAY_CONTAINS(\n      SPLIT(: commits, ','),\n      w.head_sha\n    )\n    OR : commits = ''\n  )\n  AND (\n    ARRAY_CONTAINS(\n      SPLIT(: filenames, ','),\n      o.filename\n    )\n    OR : filenames = ''\n  )\n  AND (\n    ARRAY_CONTAINS(\n      SPLIT(: names, ','),\n      o.name\n    )\n    OR : names = ''\n  )\n  AND (\n    ARRAY_CONTAINS(\n      SPLIT(: devices, ','),\n      o.device\n    )\n    OR : devices = ''\n  )\n  AND (\n    ARRAY_CONTAINS(\n      SPLIT(: dtypes, ','),\n      o.dtype\n    )\n    OR : dtypes = ''\n  )\n  AND o.metric IS NOT NULL\n  AND o.dtype IS NOT NULL\n  AND o.device IS NOT NULL\n  AND w.html_url LIKE CONCAT('%', : repo, '%')\nORDER BY\n  granularity_bucket DESC,\n  workflow_id DESC,\n  name,\n  dtype,\n  device",
  "default_parameters": [
    {
      "name": "branches",
      "type": "string",
      "value": "main"
    },
    {
      "name": "commits",
      "type": "string",
      "value": ""
    },
    {
      "name": "devices",
      "type": "string",
      "value": ""
    },
    {
      "name": "dtypes",
      "type": "string",
      "value": ""
    },
    {
      "name": "filenames",
      "type": "string",
      "value": ""
    },
    {
      "name": "getJobId",
      "type": "bool",
      "value": "false"
    },
    {
      "name": "granularity",
      "type": "string",
      "value": "day"
    },
    {
      "name": "names",
      "type": "string",
      "value": ""
    },
    {
      "name": "repo",
      "type": "string",
      "value": "pytorch/pytorch"
    },
    {
      "name": "startTime",
      "type": "string",
      "value": "2024-05-01T00:00:00.00Z"
    },
    {
      "name": "stopTime",
      "type": "string",
      "value": "2024-08-01T00:00:00.00Z"
    }
  ]
}